"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var abstractRefiners_1 = require("../abstractRefiners");
var UnlikelyFormatFilter = (function (_super) {
    __extends(UnlikelyFormatFilter, _super);
    function UnlikelyFormatFilter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UnlikelyFormatFilter.prototype.isValid = function (context, result) {
        if (result.text.replace(' ', '').match(/^\d*(\.\d*)?$/)) {
            context.debug(function () {
                console.log("Removing unlikely result '" + result.text + "'");
            });
            return false;
        }
        if (!result.start.isValidDate()) {
            context.debug(function () {
                console.log("Removing invalid result: " + result + " (" + result.start + ")");
            });
            return false;
        }
        if (result.end && !result.end.isValidDate()) {
            context.debug(function () {
                console.log("Removing invalid result: " + result + " (" + result.end + ")");
            });
            return false;
        }
        return true;
    };
    return UnlikelyFormatFilter;
}(abstractRefiners_1.Filter));
exports.default = UnlikelyFormatFilter;
