"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var dayjs_1 = __importDefault(require("dayjs"));
var ForwardDateRefiner = (function () {
    function ForwardDateRefiner() {
    }
    ForwardDateRefiner.prototype.refine = function (context, results) {
        if (!context.option.forwardDate) {
            return results;
        }
        results.forEach(function (result) {
            var refMoment = dayjs_1.default(context.refDate);
            if (result.start.isOnlyDayMonthComponent() && refMoment.isAfter(result.start.dayjs())) {
                for (var i = 0; i < 3 && refMoment.isAfter(result.start.dayjs()); i++) {
                    result.start.imply('year', result.start.get('year') + 1);
                    context.debug(function () {
                        console.log("Forward yearly adjusted for " + result + " (" + result.start + ")");
                    });
                    if (result.end && !result.end.isCertain('year')) {
                        result.end.imply('year', result.end.get('year') + 1);
                        context.debug(function () {
                            console.log("Forward yearly adjusted for " + result + " (" + result.end + ")");
                        });
                    }
                }
            }
            if (result.start.isOnlyWeekdayComponent() && refMoment.isAfter(result.start.dayjs())) {
                if (refMoment.day() > result.start.get('weekday')) {
                    refMoment = refMoment.day(result.start.get('weekday') + 7);
                }
                else {
                    refMoment = refMoment.day(result.start.get('weekday'));
                }
                result.start.imply('day', refMoment.date());
                result.start.imply('month', refMoment.month() + 1);
                result.start.imply('year', refMoment.year());
                context.debug(function () {
                    console.log("Forward weekly adjusted for " + result + " (" + result.start + ")");
                });
                if (result.end && result.end.isOnlyWeekdayComponent()) {
                    if (refMoment.day() > result.end.get('weekday')) {
                        refMoment = refMoment.day(result.end.get('weekday') + 7);
                    }
                    else {
                        refMoment = refMoment.day(result.end.get('weekday'));
                    }
                    result.end.imply('day', refMoment.date());
                    result.end.imply('month', refMoment.month() + 1);
                    result.end.imply('year', refMoment.year());
                    context.debug(function () {
                        console.log("Forward weekly adjusted for " + result + " (" + result.end + ")");
                    });
                }
            }
        });
        return results;
    };
    return ForwardDateRefiner;
}());
exports.default = ForwardDateRefiner;
