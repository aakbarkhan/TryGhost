"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var AbstractParserWithWordBoundary_1 = require("../../../common/parsers/AbstractParserWithWordBoundary");
var PATTERN = new RegExp('([0-9]|0[1-9]|1[012])/([0-9]{4})' +
    '', 'i');
var MONTH_GROUP = 1;
var YEAR_GROUP = 2;
var ENSlashMonthFormatParser = (function (_super) {
    __extends(ENSlashMonthFormatParser, _super);
    function ENSlashMonthFormatParser() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ENSlashMonthFormatParser.prototype.innerPattern = function () {
        return PATTERN;
    };
    ENSlashMonthFormatParser.prototype.innerExtract = function (context, match) {
        var year = parseInt(match[YEAR_GROUP]);
        var month = parseInt(match[MONTH_GROUP]);
        return context.createParsingComponents()
            .imply('day', 1)
            .assign('month', month)
            .assign('year', year);
    };
    return ENSlashMonthFormatParser;
}(AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking));
exports.default = ENSlashMonthFormatParser;
