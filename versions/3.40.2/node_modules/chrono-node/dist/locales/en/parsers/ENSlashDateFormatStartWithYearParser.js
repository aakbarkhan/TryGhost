"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("../constants");
var pattern_1 = require("../../../utils/pattern");
var AbstractParserWithWordBoundary_1 = require("../../../common/parsers/AbstractParserWithWordBoundary");
var PATTERN = new RegExp('([0-9]{4})[\\.\\/]'
    + '(?:(' + pattern_1.matchAnyPattern(constants_1.MONTH_DICTIONARY) + ')|([0-9]{1,2}))[\\.\\/]'
    + '([0-9]{1,2})'
    + '(?=\\W|$)', 'i');
var YEAR_NUMBER_GROUP = 1;
var MONTH_NAME_GROUP = 2;
var MONTH_NUMBER_GROUP = 3;
var DATE_NUMBER_GROUP = 4;
var ENSlashDateFormatStartWithYearParser = (function (_super) {
    __extends(ENSlashDateFormatStartWithYearParser, _super);
    function ENSlashDateFormatStartWithYearParser() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ENSlashDateFormatStartWithYearParser.prototype.innerPattern = function () { return PATTERN; };
    ENSlashDateFormatStartWithYearParser.prototype.innerExtract = function (context, match) {
        var month = match[MONTH_NUMBER_GROUP] ? parseInt(match[MONTH_NUMBER_GROUP]) :
            constants_1.MONTH_DICTIONARY[match[MONTH_NAME_GROUP].toLowerCase()];
        var year = parseInt(match[YEAR_NUMBER_GROUP]);
        var day = parseInt(match[DATE_NUMBER_GROUP]);
        return {
            'day': day,
            'month': month,
            'year': year
        };
    };
    return ENSlashDateFormatStartWithYearParser;
}(AbstractParserWithWordBoundary_1.AbstractParserWithWordBoundaryChecking));
exports.default = ENSlashDateFormatStartWithYearParser;
